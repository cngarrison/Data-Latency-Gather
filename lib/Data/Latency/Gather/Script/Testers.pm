package Data::Latency::Gather::Script::Testers;

use v5.16;
use Moo;
use strictures 2;
use Types::Standard qw(Bool ArrayRef Str Int);

extends 'Data::Latency::Gather::Script';
with 'Data::Latency::Gather::Script::Roles::DBI';

use MooX::Options protect_argv => 0, 
				  description  => 'Manage testing servers for gathering latency stats', 
				  authors      => ['Charlie Garrison <garrison@zeta.org.au'],
				  synopsis => '
    ./bin/testers.pl add --location ap-southeast-2

    ./bin/testers.pl add --location ap-southeast-2 -v

    ./bin/testers.pl --man
' ;

use Data::Printer;
use Try::Tiny;

# VERSION: generated by DZP::OurPkgVersion


option 'location' => (
	is     => 'ro',
	isa    => Str,
	format => 's',
# 	short   => 'h', ## conflcits with --help (-h)
	default => sub { '' }, # need at least one host to start loop - undef will use default host
);


sub cmd_list {
	my $self = shift;

	$self->logger->info("\n---------------------\nList Testers\n---------------------");

	my $testers = $self->dbi->get_testers;
	$self->logger->info( np($testers) );

	return;
} ## end sub cmd_list

sub cmd_find {
	my $self = shift;

	$self->logger->info("\n---------------------\nFind Tester\n---------------------");

	my $tester = $self->dbi->get_tester($self->location );
	$self->logger->info( np($tester) );

	return;
}

sub cmd_add {
	my $self = shift;

	$self->logger->info("\n---------------------\nAdd Tester\n---------------------");
	$self->logger->debug( np( $self->location ) );

	my $tester = $self->dbi->add_tester( $self->location );
	$self->logger->info( np($tester) );

	return;
} ## end sub cmd_add



1;



__END__

=encoding utf8

=head1 NAME

testers.pl - Manage testing servers for gathering latency stats

=head1 VERSION

Version 0.01

=head1 SYNOPSIS

    ./bin/testers.pl add --location ap-southeast-2

    ./bin/testers.pl add --location ap-southeast-2 -v

    ./bin/testers.pl --man
    

=head1 DESCRIPTION

Manage testing servers for gathering latency stats. The script requires a
command in order to do anything useful. Look under FUNCTIONS for list of
available commands. Don't include `cmd_` when passing commands to the
script.

=head1 FUNCTIONS - SCRIPT COMMANDS

=head2 cmd_add

Add tester command.


=head1 AUTHOR

Charlie Garrison L<garrison@zeta.org.au>

=cut



